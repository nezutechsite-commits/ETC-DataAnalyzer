<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="8"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Cursor" Value="SizeWE"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            CornerRadius="4"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="DataGridColumnHeader.Static.Foreground" Color="#333"/>
  <SolidColorBrush x:Key="DataGridColumnHeader.Static.Background" Color="#FFF7F7F7"/>
  <SolidColorBrush x:Key="DataGridColumnHeader.Static.BorderBrush" Color="#DDD"/>
  <SolidColorBrush x:Key="DataGridColumnHeader.MouseOver.Background" Color="#FFE0E0E0"/>
  <Style x:Key="DataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Foreground" Value="{StaticResource DataGridColumnHeader.Static.Foreground}"/>
    <Setter Property="Background" Value="{StaticResource DataGridColumnHeader.Static.Background}"/>
    <Setter Property="BorderBrush" Value="{StaticResource DataGridColumnHeader.Static.BorderBrush}"/>
    <Setter Property="BorderThickness" Value="0,0,1,1"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Border
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}" 
            Padding="{TemplateBinding Padding}"
            SnapsToDevicePixels="True">
            <Grid>
              <ContentPresenter
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                Margin="10,0"
                RecognizesAccessKey="True" />
              <Thumb
                x:Name="PART_LeftHeaderGripper"
                HorizontalAlignment="Left"
                Padding="0"
                Style="{StaticResource ColumnHeaderGripperStyle}"/>
              <Thumb 
                x:Name="PART_RightHeaderGripper"
                HorizontalAlignment="Right"
                Padding="0"
                Style="{StaticResource ColumnHeaderGripperStyle}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource DataGridColumnHeader.MouseOver.Background}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <SolidColorBrush x:Key="DataGridCell.Selected.Background" Color="#FFE6E6E6"/>
  <SolidColorBrush x:Key="DataGridCell.ReadOnly.Background" Color="#55E6E6E6"/>
  <SolidColorBrush x:Key="DataGridCell.Static.Foreground" Color="#FF000000"/>
  <SolidColorBrush x:Key="DataGridCell.Static.Background" Color="Transparent"/>
  <SolidColorBrush x:Key="DataGridCell.Static.BorderBrush" Color="Transparent"/>
  <Style x:Key="DataGridCell" TargetType="{x:Type DataGridCell}">
    <Setter Property="Background" Value="{StaticResource DataGridCell.Static.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource DataGridCell.Static.BorderBrush}" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Foreground" Value="{StaticResource DataGridCell.Static.Foreground}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border 
            Name="Bd" 
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true"/>
                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="true"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="True">
        <Setter Property="Background" Value="{StaticResource DataGridCell.Selected.Background}" />
      </Trigger>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
        <Setter Property="BorderThickness" Value="1"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected" Value="true"/>
          <Condition Property="Selector.IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
      </MultiTrigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true"/>
        </MultiDataTrigger.Conditions>
      </MultiDataTrigger>
      <Trigger Property="IsReadOnly" Value="True">
        <Setter Property="Background" Value="{StaticResource DataGridCell.ReadOnly.Background}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <SolidColorBrush x:Key="DataGrid.Static.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="DataGrid.Static.BorderBrush" Color="#CCC"/>
  <Style x:Key="DataGrid" TargetType="{x:Type DataGrid}">
    <Setter Property="Background" Value="{StaticResource DataGrid.Static.Background}" />
    <Setter Property="BorderBrush" Value="{StaticResource DataGrid.Static.BorderBrush}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="FontSize" Value="14" />
    <Setter Property="GridLinesVisibility" Value="Horizontal" />
    <Setter Property="HeadersVisibility" Value="Column" />
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="RowHeight" Value="30"/>
    <Setter Property="ColumnHeaderHeight" Value="30"/>
    <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeader}"/>
    <Setter Property="CellStyle" Value="{StaticResource DataGridCell}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="8"
            SnapsToDevicePixels="True">
            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Button 
                      Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                      Command="{x:Static DataGrid.SelectAllCommand}"
                      Focusable="false"
                      Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <Border 
                      Grid.Row="0"
                      Grid.Column="1"
                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}">
                      <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" />
                    </Border>
                    <ScrollContentPresenter
                      x:Name="PART_ScrollContentPresenter"
                      Grid.Row="1"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      CanContentScroll="{TemplateBinding CanContentScroll}" />
                    <ScrollBar 
                      x:Name="PART_VerticalScrollBar"
                      Grid.Row="1"
                      Grid.Column="2"
                      Maximum="{TemplateBinding ScrollableHeight}"
                      Orientation="Vertical"
                      ViewportSize="{TemplateBinding ViewportHeight}"
                      Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                      Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Grid Grid.Row="2" Grid.Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar 
                        x:Name="PART_HorizontalScrollBar"
                        Grid.Column="1"
                        Maximum="{TemplateBinding ScrollableWidth}"
                        Orientation="Horizontal"
                        ViewportSize="{TemplateBinding ViewportWidth}"
                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalGridLinesBrush" Value="#ddd" />
    <Setter Property="HorizontalGridLinesBrush" Value="#ddd" />
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>